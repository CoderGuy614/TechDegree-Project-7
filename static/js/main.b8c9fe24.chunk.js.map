{"version":3,"sources":["config.js","components/SearchForm.js","components/Photo.js","components/NotFound.js","components/PhotoList.js","components/Nav.js","components/badUrl.js","components/App.js","index.js"],"names":["apiKey","SearchForm","state","searchText","loading","props","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","onSearch","query","currentTarget","reset","className","onSubmit","this","type","onChange","name","ref","input","placeholder","id","title","exact","to","Component","Photo","src","url","alt","NotFound","PhotoList","photos","results","data","length","map","photo","key","farm","server","secret","Nav","class","badUrl","App","requestElephantPhotos","axios","get","then","response","elephants","catch","error","console","log","requestBirdPhotos","birds","requestOtterPhotos","otters","performSearch","main","turtles","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b8c9fe24.chunk.js","sourcesContent":["\nconst apiKey = '66268d00207944868df08bb809cc6458';\nexport default apiKey;\n\n\n//secret\n//e7931107e2798511","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default class SearchForm extends Component {\n  // The searchText is stored in state and used to pass the form input data to the search function\n  state = {\n    searchText: '',\n    loading: this.props.loading\n  }\n  // Setting the value of searchText\n  onSearchChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n  // This function passes the from input to the onSearch prop, which calls the performSearch function for that term.\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSearch(this.query.value)\n    e.currentTarget.reset();\n\n  }\n  // Rendering the components.  \n  // For the home route, or if there is no search input, the user gets redirected to the default search term, \"cats\".\n  render() {  \n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit} >\n        <input type=\"search\" \n               onChange={this.onSearchChange}\n               name=\"search\" \n               ref={(input) => this.query = input }\n               placeholder=\"Search...\" />\n        <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\">search</i></button>\n            {(this.props.title === '' || this.props.title === 'undefined')\n            ? <Redirect exact to={ `/` } />\n            : <Redirect to={ `/search/${this.props.title}` }/>\n            })\n      </form>      \n    );\n  }\n}","// This component renders a photo to PhotoList based on the url passed to it.\nimport React from 'react';\n\nconst Photo = props => (\n  <li>\n    <img src={props.url} alt=\"\"/>\n  </li>\n);\n\nexport default Photo;","import React from 'react';\n// This page is rendered if no search results are found.\nconst NotFound = props => (\n  <li className='not-found'>\n    <h1>Sorry, no Photos match your search.</h1>\n  </li>\n);\n\nexport default NotFound;","import React from 'react';\nimport Photo from './Photo';\nimport NotFound from './NotFound'\n\n// This component generates the list of photos based on the data passed in as props.\nconst PhotoList = props => { \n  const results = props.data\n  let photos;\n  if (results.length > 0) {\n    photos = results.map(photo => \n        <Photo\n        key={photo.id}\n        url={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`}\n        title={photo.title} />\n    )\n  } else if(props.loading){\n    return <p> loading photos.... </p>\n  } else {\n    photos = <NotFound />\n  }\n\n  return(\n    <div className=\"photo-container\">\n        <h2> Photos of {props.title} </h2>\n        <ul>\n            {photos}\n        </ul> \n    </div>\n  );\n}\n\nexport default PhotoList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nconst Nav = props => (\n// Links for navigating to the photos of each category.\n    <nav class=\"main-nav\">\n    <ul>\n      <li><NavLink to='/elephants'>Elephants</NavLink></li>\n      <li><NavLink to='/birds'>Birds</NavLink></li>\n      <li><NavLink to='/otters'>Otters</NavLink></li>\n    </ul>\n  </nav>   \n  \n);\n\nexport default Nav","import React from 'react';\n// This component gets rendered in case of a 404 error\nconst badUrl = props => (\n  <ul className='not-found'>\n    <h1>404 Error</h1>\n    <h1>Redirecting....</h1>\n  </ul>\n);\n\nexport default badUrl;","// React Photo Gallery App Project - Jonathan Lutz January 2020\nimport React, { Component } from 'react';\nimport '../css/index.css'\nimport apiKey from '../config'\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport SearchForm from './SearchForm';\nimport PhotoList from './PhotoList';\nimport axios from 'axios'\nimport Nav from './Nav'\nimport badUrl from './badUrl.js'\n\nexport default class App extends Component {\n// The state is organized to hold photo data for the 3 categories, and a main category for search queries\n  constructor() {\n    super();\n    this.state={\n      main: {\n        photos:[],\n        loading: true,\n        title: ''\n      },\n      turtles: {\n        photos: [],\n        loading: true,\n        title: 'turtles'\n    },\n      birds: {\n        photos: [],\n        loading: true,\n        title: 'birds'\n  },\n      otters: {\n        photos: [],\n        loading: true,\n        title: 'otters'\n    }\n\n  }\n} \n// When the app mounts, requests are made for the default photo data to display and the data is stored in state.\n  componentDidMount(){\n      this.performSearch('cats')\n      this.requestElephantPhotos('elephants')\n      this.requestBirdPhotos('birds')\n      this.requestOtterPhotos('otters')\n\n  }\n// Requesting photo data from the Flickr API and storing it in state\n  requestElephantPhotos = (query) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&safe_search=&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n      let elephants = {...this.state.elephants};\n      elephants.photos = response.data.photos.photo;\n      elephants.loading = false;\n      elephants.title = 'elephants';\n  this.setState({ elephants })\n  })\n  .catch(error => {\n    console.log('Error fetching and parsing data', error);\n  });\n  }\n// Requesting photo data from the Flickr API and storing it in state\n  requestBirdPhotos = (query) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&safe_search=&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n      let birds = {...this.state.birds};\n      birds.photos = response.data.photos.photo;\n      birds.loading = false;\n      birds.title = 'birds';\n  this.setState({ birds })\n  })\n  .catch(error => {\n    console.log('Error fetching and parsing data', error);\n  });\n  }\n// Requesting photo data from the Flickr API and storing it in state\n  requestOtterPhotos = (query) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&safe_search=&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n        let otters = {...this.state.otters};\n        otters.photos = response.data.photos.photo;\n        otters.loading = false;\n        otters.title = 'otters';\n    this.setState({ otters })\n  })\n  .catch(error => {\n    console.log('Error fetching and parsing data', error);\n  });\n  }\n\n// Requesting photo data from the Flickr API and storing it in state - used for search queries\n  performSearch = (query) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&safe_search=&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n      let main = {...this.state.main};\n      main.photos = response.data.photos.photo;\n      main.loading = false;\n      main.title = query;\n  this.setState({ main })\n\n  })\n  .catch(error => {\n    console.log('Error fetching and parsing data', error);\n  });\n\n  }\n// Rendering the components and passing them props\n  render() { \n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n\n        <SearchForm onSearch={ this.performSearch } loading={ this.state.main.loading } title={ this.state.main.title }\n           />\n         <Nav />\n          <Switch>\n                {/* Creating the routes and passing the corresponding photo data from state to PhotoList as props */}\n                <Route exact path=\"/\" render={ () => <PhotoList data={this.state.main.photos} title={this.state.main.title} loading={this.state.main.loading} /> }  />\n                <Route path=\"/elephants\" render={ () => <PhotoList data={this.state.elephants.photos} title={this.state.elephants.title} loading={this.state.elephants.loading} /> }  />\n                <Route path=\"/birds\" render={ () => <PhotoList data={this.state.birds.photos} title={this.state.birds.title} loading={this.state.birds.loading} /> }  />\n                <Route path=\"/otters\" render={ () => <PhotoList data={this.state.otters.photos} title={this.state.otters.title} loading={this.state.otters.loading} /> }  />\n                <Route path=\"/search/:title\"  render={ () => <PhotoList loading={ this.state.main.loading } title={ this.state.main.title } data={this.state.main.photos} /> } />\n                <Route component={badUrl} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, \n    \n    document.getElementById('root')\n    \n    );\n\n"],"sourceRoot":""}